#

"""Issue #2 issues.

https://github.com/SENATOROVAI/intro-cs/issues/4
"""

# 1. Что такое Issues на GitHub и для чего они используются?
# Issues - это функционал Git, который позволяет "подсвечивать" и обсуждать сложные места / проблемы в коде.
#
# 2. Чем Issues отличаются от других инструментов управления задачами?
# Поддерживается возможность привязать коммит или ПР к конкретному issue.
# Автоматическое закрытие issue после мержа соответствующего ПР-а.
# Возможность устанавливать метки и назначать ответственных.
#
# 3. Какие основные компоненты (поля) есть у каждого Issue?
# Title, Description, Labels, Projects, Milestone, Development, Notification, Linked Pull Requests/Commits, Assignees
#
# 4. Как создать новое Issue в репозитории?
# Копируем ссылку на участок кода.
# Issues -> New issue
# Выбираем тип issue.
# Заполняем тайл, описание и другие поля.
#
# 5. Какие данные рекомендуется указывать в описании Issue для лучшего понимания задачи?
# Основная цель при заполнении issue - максимально полно описать существующую проблему.
# Следует приложить ссылку на код / коммит, код ошибки, трассировку, скриншоты терминала.
#
# 6. Какие теги (labels) можно добавить к Issue? Какие из них стандартные?
# Стандартные теги:
# bug, dependencies, documentation, duplicate, enhancement, good first issue, help wanted, invalid, question, wontfix
#
# 7. Как прикрепить Assignees (ответственных) к Issue?
# Кнопка Assignees справа
#
# 8. Как использовать Labels для классификации задач?
# С помощью лейблов можно классифицировать задачи по проектам, статусам, типам и приоритетам.
#
# 9. Для чего нужен Milestone, и как связать его с Issue?
# Срок выполнения задачи. Выставляется в поле Milestone на панели справа.
#
# 10. Как привязать Issue к пул-реквесту (Pull Request)?
# Использовать ключевые слова в описании ПР или коммита с указанием номера issue (например, #7) или ссылки на issue.
# Привязать конкретный ПР к issue через кнопку Development на странице ПР-а.
# Привязать конкретный ПР к issue через кнопку Development на странице issue.
#
# 11. Как добавить комментарий к существующему Issue?
# На странице конкретного issue внизу страницы есть форма для добавления комментария.
#
# 12. Как закрыть Issue вручную?
# Кнопка "Close issue" на странице issue.
#
# 13. Можно ли автоматически закрыть Issue с помощью сообщения в коммите или пул-реквесте? Как это сделать?
# Да, используя в описании ПР или коммита ключевые слова и номер или ссылку на issue:
# close
# closes
# closed
# fix
# fixes
# fixed
# resolve
# resolves
# resolved
#
# 14. Как повторно открыть закрытое Issue, если работа ещё не завершена?
# Кнопка "Reopen issue" на странице issue.
#
# 15. Как найти все открытые или закрытые Issues в репозитории?
# Вкладка Issues в репозитории. Фильтры Open / Closed
#
# 16. Как использовать фильтры для поиска Issues по меткам, исполнителям или другим критериям?
# В поле фильтра по параметрам state, type, author, involves, assignee, label, linked,has, org, user и пр.
# Можно использовать знак - в качестве отрицания.
# Или использовать соответствующие кнопки в таблице с issues.
#
# 17. Как сортировать Issues по приоритету, дате создания или другим параметрам?
# Кнопка Sort by
#
# 18. Как настроить автоматические уведомления о новых или изменённых Issues?
# Раздел Watch в репозитории.
#
# 19. Что такое Projects в контексте GitHub, и как связать их с Issues?
# Доска для планирования и отслеживания прогресса задач. В Projects можно добавить любой из имеющихся issue.
#
# 20. Какие сторонние инструменты можно использовать для автоматизации работы с Issues (например, боты, Webhooks)?
# Probot, GitHub Actions, Zapier, Make, кастомные решения на Webhooks
#
# 21. Как упомянуть другого пользователя в комментарии к Issue?
# @github-username
#
# 22. Как запросить дополнительные данные или уточнения у автора Issue?
# В комментариях к issue.
#
# 23. Что делать, если Issue неактуально или его нужно объединить с другим?
# Закрыть его с комментарием "non-actual" или "duplicate of ..." и указать номер issue (например, #7).
#
# 24. Как использовать шаблоны для создания Issues?
# В папку .github/ISSUE_TEMPLATE/ положить шаблоны с расширением *.md или *.yml.
#
# 25. Что такое Linked Issues, и как создать связь между задачами?
# Это связанные между собой issue.
# Установить связь можно через кнопку Development или путем упоминания других issue в названии или описании.
#
# 26. Какие метрики (например, время выполнения) можно отслеживать с помощью Issues?
# Временные метрики (среднее время выполнения, время первого ответа).
# Количество открытых / закрытых issue.
#
# 27. Какие best practices рекомендуются при работе с Issues в команде?
# Использовать информативные заголовки и описания.
# Использовать метки.
# Связывать issue.
# Регулярно актуализировать статусы, закрывать неактуальные.
# Назначать ответственных.
# Использовать шаблоны.
#
#
#
