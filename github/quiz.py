"""Issue #8 Контрибьютинг в Open Source.

https://github.com/SENATOROVAI/intro-cs/issues/8
"""

# 1.1. Что такое GitHub?
# Портал для совместной разработки с использованием системы контроля версий Git.
#
# 1.2. Как GitHub связан с Git?
# GitHub построен на основе Git.
#
# 1.3. Чем отличается fork репозитория от его клонирования (clone)?
# При fork создается копия начального репозитория в аккаунте пользователя, полностью подконтрольная пользователю. При этом сохраняется связь с оригинальным репозиторием.
# При clone происходит копирование удаленного репозитория на компьютер.
#
# 1.4. Зачем нужны и как работают pull requests?
# Используются для того, чтобы "слить" изменения из одной ветки в другую.
# В том числе для внесения изменений в оригинальный репозиторий при fork.
#
# 1.5. GitHub использует ваш почтовый адрес для привязки ваших Git коммитов к вашей учётной записи?
# Да
#
# 1.6 Какая команда генерирует SSH ключ для Доступа по SSH к репозиторию
# ssh-keygen -o
#
# 2.1 Вставьте сюда ссылку на ваше ответвление
# https://github.com/rizespbya/Data-Science-For-Beginners-from-scratch-SENATOROV
#
# 2.2  вставьте сюда ссылку на вашу ветку dev
# https://github.com/rizespbya/Data-Science-For-Beginners-from-scratch-SENATOROV/tree/dev
#
# 2.4 вставьте номер из пункта 2
# 416
#
# 2.6 Выполните Merge pull request (Рисунок 116), вставьте сюда ссылку на ваш пул реквест
# https://github.com/rizespbya/Data-Science-For-Beginners-from-scratch-SENATOROV/pull/1
#
# 2.7 Вставьте сюда ссылку на закрытые пул реквесты
# https://github.com/SENATOROVAI/Data-Science-For-Beginners-from-scratch-SENATOROV/pulls?q=is%3Apr+is%3Aclosed
#
# 2.8 Как посмотреть какие файлы были в репозитории на момент определенного коммита?
# Переходим в список коммитов -> Выбираем нужный коммит -> Browse files
#
# Вставьте сюда ссылку на любой коммит
# https://github.com/rizespbya/Data-Science-For-Beginners-from-scratch-SENATOROV/commit/66a964b0227bc1989009974e6bed40e6c33a80f3
#
# 2.9 как открыть запрос слияния, указывающий на другой запрос слияния и зачем это нужно?
# На странице ПР кнопка Edit. Затем изменить целевую ветку.
#
# 3. Напишите 8 пунктов, которые нужно сделать, чтобы внести вклад в чужой проект.
# 	1. Создаем fork репозитория, в который хотим внести вклад.
# 	2. Клонируем форкнутый репозиторий на локальный компьютер.
# 	3. Находим ошибку в коде / место, которое можно улучшить.
# 	4. Создаем Issue в оригинальном репозитории с понятным тайтлом, детальным описанием, по возможности прикладываем скриншоты, коды ошибок, трассировку и пр.
# 	5. Вносим изменения в код.
# 	6. Создаем коммит, используя ключевые слова closes и пр со ссылкой на issue.
# 	7. Отправляем коммиты в форкнутый репозиторий.
# 	8. Создаем ПР в оригинальный репозиторий.
#
# 3.1. Какие практики принято соблюдать при создании Pull Request чтобы закрыть автоматический issues?
# Какие практики принято соблюдать при создании commit чтобы закрыть автоматический issues?
# В тайтле указываем ссылку на issue или номер issue
# В описании используем ключевые слова со ссылкой на issue или с номером issue:
# -close
# -closes
# -closed
# -fix
# -fixes
# -fixed
# -resolve
# -resolves
# -resolved
#
# 3.2 Как отклонить/закрыть пул реквест? (предоставьте скриншот где это в гитхабе)
# Кнопка Close pull request
# ![image.png](attachment:image.png)
#
# 3.3 Перед отправкой пул реквеста нужно ли создавать ишьюс?
# Можно создать ПР и без issue, но для поддержания прозрачного и понятного процесса разработки как правило заранее создают issue, над исправлением которого работают.
#
# 3.4 В какой вкладке можно посмотреть список изменений который был в пул реквесте?
# Files changed
#
# 3.5 В какой вкладке находится страница обсуждений пул реквеста?
# Conversation
#
# 4 Можно ли открыть пул реквест, если вы ничего не вносили в FORK?
# Нет
#
# 4.1 Что нужно сделать чтобы открыть пул реквест?
# Запушать изменения в Github. Затем нажать кнопку New pull request
#
# 4.2 Что нужно сделать Если ваш Форк устарел?
# Обновить форк.
# Добавляем оригинальный репозиторий в remote
# git remote add upstream https://github.com/оригинал-автор/имя-репозитория.git
#
# После этого в подтягиваем изменения из оригинального репозитории:
# git fetch upstream
#
# И вливаем изменения в свою ветку:
# git merge upstream/main
#
# 4.3 Что нужно сделать если в пул реквесте имеются конфликты слияния?
# Обновить локальной свою ветку, подтянув изменения из оригинального репозитория.
# Разрешить конфликты.
# Отправить изменения в Github.
#
# Второй вариант - перебазировать свою ветку.
#
# 5. Что нужно сделать Для добавления отрывка кода в комментарии к ишьюсу?
# Использовать ```...```. В идеале с указанием языка, на котором написан код.
#
# 5.1 На какую клавишу нажать клавишу чтобы выделенный текст был включён как цитата в ваш комментарий?
# >
#
# 5.2 Как вставить картинку в ишьюс?
# Перетащить картинку на поле ввода комментария. Или в поле ввода вставить картинку из буфера.
#
# 6. Как понять что ваш форк устарел?
# В вебинтерфейсе появится уведомление "This branch is X commits behind [оригинальный репозиторий]:main."
# Или вручную обновить remote оригинального репозитория и с помощью git log посмотреть коммиты на ветке оригинального репозитория.
#
# 6.1 Как обновить форк?
# Добавляем оригинальный репозиторий в remote
# git remote add upstream https://github.com/оригинал-автор/имя-репозитория.git
#
# После этого в подтягиваем изменения из оригинального репозитории:
# git fetch upstream
#
# И вливаем изменения в свою ветку:
# git merge upstream/main
#
# 7. Как добавить участников в ваш репозиторий, чтобы команда могла работать над одним репозиторием?
# Settings -> Collaborators
#
# 8. Какой символ нужен для упоминания кого-либо?
# @
#
# 8.1 Где находится Центр уведомлений, напишите ссылку
# https://github.com/notifications
#
# 9. Что такое и зачем нужен файл README
# Содержит описание проекта. А так же инструкции по установке зависимостей, запуску и использованию
#
# 9.1 Что такое и зачем нужен файл CONTRIBUTING
# Файл, описывающий правила и стандарты для open source работы над проектом
#
# 10. Как изменить основную ветку?
# Settings -> General -> Default branch
#
# 10.1 Как передать проект? какая кнопка?
# Кнопка "Transfer ownership" в Settings -> General
#
# 10.2 Что такое файл .gitignore?
# Файл, который содержит перечень файлов и папок (в том числе в виде шаблонов), которые не должны отслеживаться.
